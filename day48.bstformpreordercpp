//making binary search tree from preorder traversal
/*#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

class TreeNode
{
    int data;
    TreeNode*left;
    TreeNode*right;

    TreeNode(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
}; 

class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int i=0;
        return build(preorder,i,INT_MAX);

    }
    TreeNode*build(vector<int>&preorder,int&i,int bound){
        if(i==preorder.size()||preorder[i]>bound) return NULL;
        TreeNode*root=new TreeNode(preorder[i++]);
        root->left=build(preorder,i,root->val);
        root->right=build(preorder,i,bound);
        return root;
    }
};
*/